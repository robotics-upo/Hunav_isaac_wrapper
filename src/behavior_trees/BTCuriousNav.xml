<?xml version='1.0' encoding='UTF-8'?>
<root main_tree_to_execute="CuriousNavTree" BTCPP_format="4">

    <TreeNodesModel>
        <Action ID="CuriousNav">
            <input_port name="agent_id" type="int">identifier of the agent</input_port>
            <input_port name="time_step" type="double">time step in seconds to compute movement</input_port>
            <input_port name="stop_distance" type="double">the agent stops when is closer than this distance</input_port>
            <input_port name="agent_vel" type="double">the agent velocity approaching the robot</input_port>
        </Action>
        <Condition ID="IsRobotVisible">
            <input_port name="agent_id" type="int">identifier of the agent</input_port>
        </Condition>
        <Condition ID="TimeExpiredCondition">
            <input_port name="seconds" type="double">duration of the timer in seconds</input_port>
            <input_port name="ts" type="double">time step to be accumulated</input_port>
            <input_port name="only_once" type="bool">boolean to indicate if the timer must be reset at the end or not</input_port>
        </Condition>
    </TreeNodesModel>

    <include path="BTRegularNav.xml" />

    <BehaviorTree ID="CuriousNavTree">
        <Fallback name="CuriousFallback">
            <Sequence name="CurNav"> <!--ReactiveSequence-->
                <IsRobotVisible agent_id="{id}" distance="10.0" />
                <Inverter>
                    <TimeExpiredCondition seconds="{duration}" ts="{dt}" only_once="{once}" />
                </Inverter>
                <CuriousNav agent_id="{id}" time_step="{dt}" stop_distance="{stopdist}" agent_vel="{maxvel}" />
            </Sequence>
            <Sequence name="RegNav">
                <SetBlackboard output_key="agentid" value="{id}" />
                <SetBlackboard output_key="timestep" value="{dt}" />
                <SubTree ID="RegularNavTree" id="{agentid}" dt="{timestep}" />
            </Sequence>
        </Fallback>
    </BehaviorTree>
</root>