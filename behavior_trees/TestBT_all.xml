<?xml version="1.0" encoding="UTF-8"?>
<root main_tree_to_execute="DemoTree" BTCPP_format="4">
  <TreeNodesModel>
    <!-- Conditions -->

    <!-- Old nodes -->
    <Condition ID="IsGoalReached">
      <input_port name="agent_id" type="int">1</input_port>
    </Condition>
    <Condition ID="IsRobotVisible">
      <input_port name="agent_id" type="int">2</input_port>
      <input_port name="distance" type="double" default="5.0"/>
    </Condition>

    <!-- New nodes -->
    <Condition ID="RandomChanceCondition">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="probability" type="double" default="0.3"/>
    </Condition>
    <Condition ID="IsRobotFacingAgent">
      <input_port name="agent_id" type="int">1</input_port>
    </Condition>
    <Condition ID="IsAgentVisible">
      <input_port name="observer_id" type="int">1</input_port>
      <input_port name="agent_id" type="int">2</input_port>
      <input_port name="distance" type="double" default="5.0"/>
      <input_port name="field_of_view" type="double"/>
    </Condition>
    <Condition ID="IsRobotClose">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="threshold" type="double" default="1.0"/>
    </Condition>
    <Condition ID="IsAtPosition">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="target_x" type="double" default="1.0"/>
      <input_port name="target_y" type="double" default="1.0"/>
      <input_port name="tolerance" type="double" default="0.1"/>
    </Condition>
    <Condition ID="IsAgentClose">
      <input_port name="observer_id" type="int">1</input_port>
      <input_port name="target_agent_id" type="int">2</input_port>
      <input_port name="threshold" type="double" default="1.0"/>
    </Condition>

    <!-- Actions (Simple Actions) -->

    <!-- Old nodes -->
    <Action ID="UpdateGoal">
      <input_port name="agent_id" type="int">1</input_port>
    </Action>
    <Action ID="RegularNav">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
    </Action>
    <Action ID="SurprisedNav">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="beh_duration" type="double" default="5.0"/>
      <input_port name="only_once" type="bool" default="true"/>
    </Action>
    <Action ID="CuriousNav">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="beh_duration" type="double" default="5.0"/>
      <input_port name="only_once" type="bool" default="true"/>
      <input_port name="agent_vel" type="double" default="1.0"/>
      <input_port name="stop_distance" type="double" default="0.5"/>
    </Action>
    <Action ID="ScaredNav">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="beh_duration" type="double" default="5.0"/>
      <input_port name="only_once" type="bool" default="true"/>
      <input_port name="runaway_vel" type="double" default="1.5"/>
      <input_port name="scary_force_factor" type="double" default="1.0"/>
    </Action>
    <Action ID="ThreateningNav">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="beh_duration" type="double" default="5.0"/>
      <input_port name="only_once" type="bool" default="true"/>
      <input_port name="goal_dist" type="double" default="1.0"/>
    </Action>

    <!-- New nodes -->
    <Action ID="FindNearestAgent">
      <input_port name="agent_id" type="int">1</input_port>
      <output_port name="target_agent_id" type="int"/>
    </Action>
    <Action ID="SaySomething">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="message" type="std::string">Hello, I am here!</input_port>
    </Action>
    <Action ID="SetGroupId">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="group_id" type="int">5</input_port>
    </Action>
    <Action ID="SetGoal">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="goal_id" type="int"/>
    </Action>
    <Action ID="StopMovement">
      <input_port name="agent_id" type="int">1</input_port>
    </Action>
    <Action ID="ResumeMovement">
      <input_port name="agent_id" type="int">1</input_port>
    </Action>

    <!-- Stateful Action Nodes -->
    <Action ID="StopAndWaitTimerAction">
      <input_port name="agent_id" type="int">identifier of the agent</input_port>
      <input_port name="wait_duration" type="double">3.0</input_port>
    </Action>

    <Action ID="ConversationFormation">
      <input_port name="main_agent_id" type="int">1</input_port>
      <input_port name="conversation_duration" type="double" default="10.0"/>
      <input_port name="goal_id" type="int"/>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="non_main_agent_ids" type="std::string"/>
    </Action>
    <Action ID="GoTo">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="goal_id" type="int">Goal ID from agent's ROS goals to navigate to</input_port>
      <input_port name="tolerance" type="double" default="0.1">Distance tolerance to consider goal reached</input_port>
    </Action>
    <Action ID="ApproachAgent">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="target_agent_id" type="int">2</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="closest_dist" type="double" default="0.5"/>
      <input_port name="max_vel" type="double" default="1.0"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Action>
    <Action ID="ApproachRobot">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="closest_dist" type="double" default="1.5"/>
      <input_port name="max_vel" type="double" default="1.8"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Action>
    <Action ID="BlockRobot">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="front_dist" type="double" default="1.0"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Action>
    <Action ID="BlockAgent">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="target_agent_id" type="int">2</input_port>
      <input_port name="time_step" type="double" default="0.1"/>
      <input_port name="front_dist" type="double" default="1.0"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Action>
    <Action ID="SetGroupWalk">
      <input_port name="main_agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double"/>
      <input_port name="non_main_agent_ids" type="std::string"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Action>
    <Action ID="FollowAgent">
      <input_port name="agent_id" type="int"/>
      <input_port name="time_step" type="double"/>
      <input_port name="target_agent_id" type="int"/>
      <input_port name="duration" type="double"/>
    </Action>
    <Action ID="LookAtAgent">
      <input_port name="observer_id" type="int">1</input_port>
      <input_port name="target_id" type="int">2</input_port>
    </Action>
    <Action ID="LookAtRobot">
      <input_port name="agent_id" type="int">1</input_port>
    </Action>
    <Action ID="LookAtPoint">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="goal_id" type="int">Goal ID from agent's ROS goals to look at</input_port>
    </Action>

    <!-- Stateful Condition Nodes -->
    <Condition ID="IsAnyoneSpeaking">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double"/>
      <input_port name="distance_threshold" type="double" default="5.0"/>
      <input_port name="duration" type="double" default="5.0"/>
      <output_port name="speaker_id" type="int"/>
    </Condition>
    <Condition ID="IsSpeaking">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double"/>
      <input_port name="target_id" type="int">2</input_port>
      <input_port name="distance_threshold" type="double" default="5.0"/>
      <input_port name="duration" type="double" default="5.0"/>
    </Condition>
    <Condition ID="IsAnyoneLookingAtMe">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double"/>
      <input_port name="distance_threshold" type="double" default="5.0"/>
      <input_port name="angle_threshold" type="double" default="0.2"/>
      <input_port name="duration" type="double" default="5.0"/>
      <output_port name="observer_id" type="int"/>
    </Condition>
    <Condition ID="IsLookingAtMe">
      <input_port name="agent_id" type="int">1</input_port>
      <input_port name="time_step" type="double"/>
      <input_port name="target_id" type="int">2</input_port>
      <input_port name="distance_threshold" type="double" />
      <input_port name="angle_threshold" type="double"/>
      <input_port name="duration" type="double"/>
    </Condition>

  </TreeNodesModel>

  <BehaviorTree ID="DemoTree">
    <Fallback name="MainFallback">
      <!-- Block Robot Sequence -->
      <Sequence name="BlockRobotSequence">
        <IsRobotClose agent_id="{id}" threshold="1.0"/>
        <BlockRobot agent_id="{id}" time_step="{dt}" front_dist="1.0" duration="{duration}"/>
      </Sequence>

      <!-- Blocking Behavior: if another agent is too close -->
      <Sequence name="BlockingAgentSequence">
        <IsAgentClose observer_id="{id}" target_agent_id="2" threshold="0.8"/>
        <BlockAgent agent_id="{id}" target_agent_id="2" time_step="{dt}" front_dist="1.0" duration="3.0"/>
      </Sequence>

      <!-- Approach Agent Sequence -->
      <Sequence name="ApproachAgentSequence">
        <ApproachAgent agent_id="{id}" target_agent_id="2" time_step="{dt}" closest_dist="0.5" max_vel="1.0" duration="{duration}"/>
      </Sequence>

      <!-- Approach Robot: if robot is moderately close -->
      <Sequence name="ApproachRobotSequence">
        <IsRobotClose agent_id="{id}" threshold="1.2"/>
        <ApproachRobot agent_id="{id}" time_step="{dt}" closest_dist="1.5" max_vel="1.8" duration="5.0"/>
      </Sequence>

      <!-- Look at robot then approach it -->
      <Sequence name="LookThenApproachRobot">
        <IsRobotVisible agent_id="{id}" distance="5.0"/>
        <LookAtRobot agent_id="{id}"/>
        <ApproachRobot agent_id="{id}" time_step="{dt}" closest_dist="1.5" max_vel="1.2" duration="4.0"/>
      </Sequence>

      <!-- Communication Sequence -->
      <Sequence name="CommunicationSequence">
        <SaySomething agent_id="{id}" message="Hello, I am here!"/>
      </Sequence>

      <!-- Social Interaction: approach a nearby agent and communicate -->
      <Sequence name="SocialInteractionSequence">
        <IsAgentVisible observer_id="{id}" agent_id="2" distance="5.0"/>
        <IsAgentClose observer_id="{id}" target_agent_id="2" threshold="1.5"/>
        <ApproachAgent agent_id="{id}" target_agent_id="2" time_step="{dt}" closest_dist="0.5" max_vel="1.0" duration="3.0"/>
        <SaySomething agent_id="{id}" message="Hello, friend!"/>
      </Sequence>

      <!-- Emergency Communication: if the robot is very close -->
      <Sequence name="EmergencyCommSequence">
        <IsRobotClose agent_id="{id}" threshold="0.8"/>
        <SaySomething agent_id="{id}" message="Robot too close!"/>
      </Sequence>

      <!-- Group Assignment: assign a new group ID to the agent and a partner -->
      <Sequence name="GroupAssignment">
        <SetGroupId agent_id="{id}" group_id="3"/>
        <SetGroupId agent_id="3" group_id="3"/>
      </Sequence>

      <!-- Goal Setting: update the agent's goal and check if it reached the position -->
      <Sequence name="GoalSetting">
        <SetGoal agent_id="{id}" target_x="1.0" target_y="1.0"/>
        <IsAtPosition agent_id="{id}" target_x="1.0" target_y="1.0" tolerance="0.1"/>
      </Sequence>

      <!-- Random small‑group conversation formation -->
      <Sequence name="ConversationSeq">
        <RandomChanceCondition agent_id="{id}" probability="0.25"/>
        <ConversationFormation main_agent_id="{id}" time_step="{dt}" conversation_duration="8.0" center_x="3.0" center_y="3.0" non_main_agent_ids="2,3"/>
      </Sequence>

      <!-- Movement and Wait -->
      <Sequence name="MovementAndWaitSequence">
        <GoTo agent_id="{id}" target_x="2.0" target_y="3.0"/>
        <StopAndWaitTimerAction agent_id="{id}" wait_duration="3.0"/>
      </Sequence>

      <!-- Conversation Formation Only -->
      <Sequence name="ConversationSequence">
        <ConversationFormation main_agent_id="{id}" conversation_duration="20.0" center_x="5.0" center_y="5.0" time_step="{dt}" non_main_agent_ids="1,3"/>
      </Sequence>

      <!-- Walk toward the current speaker -->
      <Sequence name="SpeakerSeq">
        <IsAnyoneSpeaking agent_id="{id}" time_step="{dt}" distance_threshold="6.0" duration="2.0" speaker_id="{speaker}"/>
        <ApproachAgent agent_id="{id}" time_step="{dt}" target_agent_id="{speaker}" duration="6.0"/>
      </Sequence>

      <!-- Follow a staring observer -->
      <Sequence name="FollowSeq">
        <IsAnyoneLookingAtMe agent_id="{id}" time_step="{dt}" distance_threshold="5.0" angle_threshold="0.2" duration="3.0" observer_id="{observer}"/>
        <FollowAgent agent_id="{id}" time_step="{dt}" target_agent_id="{observer}" duration="7.0"/>
      </Sequence>

      <!-- Regular Navigation Sequence -->
      <Sequence name="RegularNavigation">
        <Inverter>
          <IsGoalReached agent_id="{id}"/>
        </Inverter>
        <RegularNav agent_id="{id}" time_step="{dt}"/>
      </Sequence>

      <!-- Update Goal -->
      <UpdateGoal agent_id="{id}"/>
    </Fallback>
  </BehaviorTree>
</root>
